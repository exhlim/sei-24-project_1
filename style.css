@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap');
* {
	box-sizing: border-box;
}
body {
	font-family: "Fredoka One" sans-serif;
	margin: 0;
	background-color: pink;
}
h1 {
	text-align: center;
	font-size: 5em;
	color: teal;
	margin: 0 auto;
	text-decoration: underline;
}
.containerBoard {
	border-radius: 50px;
	background: linear-gradient(150deg, #02ccba 0%, #aa7ecd 100%);
	padding: 30px 0;
	width: 70vw;
	margin: 0 auto;
	display: flex;
	justify-content: center;
}
.overlay {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: none;
	justify-content: center;
	align-items: center;
	z-index: 1;
	color: white;
}
.overlay.visible {
	display: flex;
	flex-direction: column;
	text-align: center;
	animation: grow 500ms forwards;
	/* forwards=>keep the animation and effects that the keyframes has attached to it*/
}
@keyframes grow {
	from {
		background-color: rgba(0, 0, 0, 0);
		font-size: 0;
	}
	to {
		background-color: rgb(0, 0, 0, 0.8);
		font-size: 6em;
	}
}
.reset {
	font-size: 0.4em;
}
.difficulty {
	font-size: 0.4em;
}
.selectDifficulty {
	text-decoration:underline;
	font-size: 30px;
}
.choices {
	background-color: salmon;
	font-size: 18px;
	height: 25px;
	width: 90px;
	border-radius: 5px;
}



.gameContainer {
	display: grid;
	grid-gap: 20px;
}
.gameInfoContainer {
	font-size: 1.5em;
	color: white;
	display: flex;
	justify-content: space-around;
}
.cardsContainer {
	display: grid;
	grid-template-columns: repeat(4, auto);
	grid-gap: 10px;
	justify-content: center;
	perspective: 500px;
}



.card {
	position: relative;
	border-radius: 10px;
	height: 155px;
	width: 111px;
}



.cardFace {
	position: absolute;
	height: 100%;
	width: 100%;
	display: flex;
	backface-visibility: hidden;
	justify-content: center;
	/* Flipping animation transition */
	transition: transform 500ms ease-in-out;
	border-radius: 10px;
}
.cardBack {
	box-shadow: inset 0px 0px 0px 1.5px #FFC000;
	background-color: #002F93;
}
.cardFront {
	/*cardfront if infront cause of the div placement
	add rorateY 180 to it is backwards now and add backface-visiblity:hiddent to hide anything that has its back facing us. Now we add another class known as the ."visible" which we can alter the card visibility by changing the transform property*/
	transform: rotateY(180deg);
	background-color: black;
	background-color: #f2f2f2;
	box-shadow: inset 0px 0px 0px 1.5px #FFC000;
}


/* cardBack that are the child elements of those that have card and visible class*/
.card.visible .cardBack {
	/*Card back will rotate to disappear*/
	transform: rotateY(-180deg);
}
.card.visible .cardFront {
	/* Card front will rotate to show itself*/
	transform: rotateY(0deg);
}
.card.matched .icon {
	animation: dance 1s linear infinite 500ms;
}
@keyframes dance {
	0%, 100% {
		transform: rotate(0);
	}
	25% {
		transform: rotate(-30deg);
	}
	75% {
		transform: rotate(30deg);
	}
}



.cube {
	position: absolute;
	height: 70px;
	top: 26%;
	left: 23%;
	transition: transform 150ms ease-in-out;
}
.icon {
	position: absolute;
	height: 70px;
	top: 27%;
	left: 19%;
	transform: scale(1);
	transition: transform 150ms ease-in-out
}
.corner {
	position: absolute;
	height: 25px;
	transition: height 150ms ease-in-out, width 150ms ease-in-out;
}



.topLeft {
	top: 0;
	left: 0;
}
.topRight {
	top: 0;
	right: 0;
	transform: rotate(85deg);
}
.btmLeft {
	bottom: 0;
	left: 0;
	transform: rotate(265deg);
}
.btmRight {
	bottom: 0;
	right: 0;
	transform: rotate(180deg);
}
.hover {
	font-size: 0.5em;
}



.cardFace:hover .corner{
	height: 30px;
}
.cardBack:hover .cube {
	transform: rotate(90deg);
}
.cardFront:hover .icon {
	transform: scale(1.1);
}

@media (max-width: 780px) {
	.cardsContainer {
		grid-template-columns: repeat(2, auto);
	}
	.gameInfoContainer {
		grid-template-columns: repeat(1, auto);
		flex-direction: column;
		align-items: center;
	}
}